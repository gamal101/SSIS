<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/20/2017 1:44:35 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="HUMPH"
  DTS:CreatorName="WISEOWL\Andy.Brown"
  DTS:DTSID="{77827105-A88C-4756-B0A3-19D016CCBEDD}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="2057"
  DTS:ObjectName="Generate genres"
  DTS:PackageType="5"
  DTS:VersionBuild="6"
  DTS:VersionGUID="{44930FD0-99CB-4605-AAB0-9E8A6E0908A8}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-T4KINTS\SQLEXPRESS.Wistful]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{C7545152-2AEC-44FF-84E4-FC86E60EC447}"
      DTS:ObjectName="DESKTOP-T4KINTS\SQLEXPRESS.Wistful">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-T4KINTS\SQLEXPRESS;Initial Catalog=Wistful;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Generate genres-{C7545152-2AEC-44FF-84E4-FC86E60EC447}DESKTOP-T4KINTS\SQLEXPRESS.Wistful;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{71A53C51-17E9-40F0-8CEF-06932EC04F13}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\Jamal's\ROWAD MASR\wiseowl exercises\SSIS- (20)\List of films.xlsx;Extended Properties=&quot;Excel 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Workbook of films]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{2DE64A67-F1AF-41D6-967A-EAF5691DEA22}"
      DTS:ObjectName="Workbook of films">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\ajb\List of films.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete any old films from FilmsForLookupExercise table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{93C5614D-4B79-45B1-8C7D-FE37312FAC3E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete any old films from FilmsForLookupExercise table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{548C867D-C15A-45F2-BD64-686786072B0E}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE FilmsForLookupExercise" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Finally - show films with new genres"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{27BC6F51-1356-424D-A7F1-A507BC3D3F96}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Finally - show films with new genres"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Finally - show films with new genres\Films table just created"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Films table just created"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FilmsForLookupExercise]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Finally - show films with new genres\Films table just created.Connections[OleDbConnection]"
                  connectionManagerID="{548C867D-C15A-45F2-BD64-686786072B0E}:invalid"
                  connectionManagerRefId="{548C867D-C15A-45F2-BD64-686786072B0E}:invalid"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].Columns[FilmName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].ExternalColumns[FilmName]"
                      length="255"
                      lineageId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].Columns[FilmName]"
                      name="FilmName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].Columns[Director]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].ExternalColumns[Director]"
                      length="255"
                      lineageId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].Columns[Director]"
                      name="Director"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].Columns[GenreId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].ExternalColumns[GenreId]"
                      lineageId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].Columns[GenreId]"
                      name="GenreId"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].ExternalColumns[FilmName]"
                      dataType="wstr"
                      length="255"
                      name="FilmName" />
                    <externalMetadataColumn
                      refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].ExternalColumns[Director]"
                      dataType="wstr"
                      length="255"
                      name="Director" />
                    <externalMetadataColumn
                      refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].ExternalColumns[GenreId]"
                      dataType="i4"
                      name="GenreId" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Error Output].Columns[FilmName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Error Output].Columns[FilmName]"
                      name="FilmName" />
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Error Output].Columns[Director]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Error Output].Columns[Director]"
                      name="Director" />
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Error Output].Columns[GenreId]"
                      dataType="i4"
                      lineageId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Error Output].Columns[GenreId]"
                      name="GenreId" />
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Finally - show films with new genres\Genre more than 22"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Genre more than 22"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Finally - show films with new genres\Genre more than 22.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Finally - show films with new genres\Genre more than 22.Inputs[Conditional Split Input].Columns[GenreId]"
                      cachedDataType="i4"
                      cachedName="GenreId"
                      lineageId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].Columns[GenreId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Finally - show films with new genres\Genre more than 22.Outputs[New]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="New"
                  synchronousInputId="Package\Finally - show films with new genres\Genre more than 22.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].Columns[GenreId]} &gt; 22</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">GenreId &gt; 22</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Finally - show films with new genres\Genre more than 22.Outputs[Old]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Old"
                  synchronousInputId="Package\Finally - show films with new genres\Genre more than 22.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Finally - show films with new genres\Genre more than 22.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Finally - show films with new genres\Genre more than 22.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Genre more than 22.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Finally - show films with new genres\Genre more than 22.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Genre more than 22.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Finally - show films with new genres\Genre more than 22.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Finally - show films with new genres\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Finally - show films with new genres\Union All.Inputs[Union All Input 1]"
                  hasSideEffects="true"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Finally - show films with new genres\Union All.Inputs[Union All Input 1].Columns[FilmName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FilmName"
                      lineageId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].Columns[FilmName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Finally - show films with new genres\Union All.Outputs[Union All Output 1].Columns[FilmName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Finally - show films with new genres\Union All.Inputs[Union All Input 1].Columns[Director]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Director"
                      lineageId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].Columns[Director]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Finally - show films with new genres\Union All.Outputs[Union All Output 1].Columns[Director]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Finally - show films with new genres\Union All.Inputs[Union All Input 1].Columns[GenreId]"
                      cachedDataType="i4"
                      cachedName="GenreId"
                      lineageId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output].Columns[GenreId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Finally - show films with new genres\Union All.Outputs[Union All Output 1].Columns[GenreId]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Finally - show films with new genres\Union All.Inputs[Union All Input 2]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Finally - show films with new genres\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Union All.Outputs[Union All Output 1].Columns[FilmName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Finally - show films with new genres\Union All.Outputs[Union All Output 1].Columns[FilmName]"
                      name="FilmName" />
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Union All.Outputs[Union All Output 1].Columns[Director]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Finally - show films with new genres\Union All.Outputs[Union All Output 1].Columns[Director]"
                      name="Director" />
                    <outputColumn
                      refId="Package\Finally - show films with new genres\Union All.Outputs[Union All Output 1].Columns[GenreId]"
                      dataType="i4"
                      lineageId="Package\Finally - show films with new genres\Union All.Outputs[Union All Output 1].Columns[GenreId]"
                      name="GenreId" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Finally - show films with new genres.Paths[New]"
              endId="Package\Finally - show films with new genres\Union All.Inputs[Union All Input 1]"
              name="New"
              startId="Package\Finally - show films with new genres\Genre more than 22.Outputs[New]" />
            <path
              refId="Package\Finally - show films with new genres.Paths[OLE DB Source Output]"
              endId="Package\Finally - show films with new genres\Genre more than 22.Inputs[Conditional Split Input]"
              name="OLE DB Source Output"
              startId="Package\Finally - show films with new genres\Films table just created.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Pass 1 - add new genres"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{21089078-ED55-4BDF-B9EA-401422B8E4EF}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Pass 1 - add new genres"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Pass 1 - add new genres\Add to genre table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Add to genre table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Genre]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Pass 1 - add new genres\Add to genre table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DESKTOP-T4KINTS\SQLEXPRESS.Wistful]"
                  connectionManagerRefId="Package.ConnectionManagers[DESKTOP-T4KINTS\SQLEXPRESS.Wistful]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Pass 1 - add new genres\Add to genre table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Pass 1 - add new genres\Add to genre table.Inputs[OLE DB Destination Input].Columns[Genre]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Genre"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Pass 1 - add new genres\Add to genre table.Inputs[OLE DB Destination Input].ExternalColumns[GenreName]"
                      lineageId="Package\Pass 1 - add new genres\Sort.Outputs[Sort Output].Columns[Genre]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Pass 1 - add new genres\Add to genre table.Inputs[OLE DB Destination Input].ExternalColumns[GenreId]"
                      dataType="i4"
                      name="GenreId" />
                    <externalMetadataColumn
                      refId="Package\Pass 1 - add new genres\Add to genre table.Inputs[OLE DB Destination Input].ExternalColumns[GenreName]"
                      dataType="wstr"
                      length="255"
                      name="GenreName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Pass 1 - add new genres\Add to genre table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Pass 1 - add new genres\Add to genre table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\Add to genre table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Pass 1 - add new genres\Add to genre table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\Add to genre table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Pass 1 - add new genres\Add to genre table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Pass 1 - add new genres\List of films"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="List of films"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Films$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Pass 1 - add new genres\List of films.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].Columns[FilmID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].ExternalColumns[FilmID]"
                      lineageId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].Columns[FilmID]"
                      name="FilmID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].Columns[Title]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].ExternalColumns[Title]"
                      length="255"
                      lineageId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].Columns[Title]"
                      name="Title"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].Columns[Director]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].ExternalColumns[Director]"
                      length="255"
                      lineageId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].Columns[Director]"
                      name="Director"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].Columns[Genre]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].ExternalColumns[Genre]"
                      length="255"
                      lineageId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].Columns[Genre]"
                      name="Genre"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].ExternalColumns[FilmID]"
                      dataType="r8"
                      name="FilmID" />
                    <externalMetadataColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].ExternalColumns[Title]"
                      dataType="wstr"
                      length="255"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].ExternalColumns[Director]"
                      dataType="wstr"
                      length="255"
                      name="Director" />
                    <externalMetadataColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].ExternalColumns[Genre]"
                      dataType="wstr"
                      length="255"
                      name="Genre" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output].Columns[FilmID]"
                      dataType="r8"
                      lineageId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output].Columns[FilmID]"
                      name="FilmID" />
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output].Columns[Title]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output].Columns[Director]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output].Columns[Director]"
                      name="Director" />
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output].Columns[Genre]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output].Columns[Genre]"
                      name="Genre" />
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Pass 1 - add new genres\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Pass 1 - add new genres\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Pass 1 - add new genres\Sort.Inputs[Sort Input].Columns[Genre]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Genre"
                      lineageId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].Columns[Genre]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Pass 1 - add new genres\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\Sort.Outputs[Sort Output].Columns[Genre]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Pass 1 - add new genres\Sort.Outputs[Sort Output].Columns[Genre]"
                      name="Genre"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].Columns[Genre]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Pass 1 - add new genres\Try to find genre"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Try to find genre"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Genre]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Genre]) [refTable]
where [refTable].[GenreName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="GenreId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GenreName" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].Columns[Genre]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Pass 1 - add new genres\Try to find genre.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DESKTOP-T4KINTS\SQLEXPRESS.Wistful]"
                  connectionManagerRefId="Package.ConnectionManagers[DESKTOP-T4KINTS\SQLEXPRESS.Wistful]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Pass 1 - add new genres\Try to find genre.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Pass 1 - add new genres\Try to find genre.Inputs[Lookup Input].Columns[Genre]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Genre"
                      lineageId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output].Columns[Genre]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">GenreName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Pass 1 - add new genres\Try to find genre.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Pass 1 - add new genres\Try to find genre.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\Try to find genre.Outputs[Lookup Match Output].Columns[GenreId]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Pass 1 - add new genres\Try to find genre.Outputs[Lookup Match Output].Columns[GenreId]"
                      name="GenreId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">GenreId</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Pass 1 - add new genres\Try to find genre.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Pass 1 - add new genres\Try to find genre.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Pass 1 - add new genres\Try to find genre.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Pass 1 - add new genres\Try to find genre.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\Try to find genre.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Pass 1 - add new genres\Try to find genre.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Pass 1 - add new genres\Try to find genre.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Pass 1 - add new genres\Try to find genre.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Pass 1 - add new genres.Paths[Excel Source Output]"
              endId="Package\Pass 1 - add new genres\Try to find genre.Inputs[Lookup Input]"
              name="Excel Source Output"
              startId="Package\Pass 1 - add new genres\List of films.Outputs[Excel Source Output]" />
            <path
              refId="Package\Pass 1 - add new genres.Paths[Lookup No Match Output]"
              endId="Package\Pass 1 - add new genres\Sort.Inputs[Sort Input]"
              name="Lookup No Match Output"
              startId="Package\Pass 1 - add new genres\Try to find genre.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Pass 1 - add new genres.Paths[Sort Output]"
              endId="Package\Pass 1 - add new genres\Add to genre table.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Pass 1 - add new genres\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Pass 2 - import films"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{A042ECF7-D87D-458D-9E37-81C44C1504E5}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Pass 2 - import films"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Pass 2 - import films\Find corresponding genre id (will always be one)"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Find corresponding genre id (will always be one)"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Genre]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Genre]) [refTable]
where [refTable].[GenreName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="GenreId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GenreName" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].Columns[Genre]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Connections[OleDbConnection]"
                  connectionManagerID="{548C867D-C15A-45F2-BD64-686786072B0E}:invalid"
                  connectionManagerRefId="{548C867D-C15A-45F2-BD64-686786072B0E}:invalid"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Inputs[Lookup Input].Columns[Genre]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Genre"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].Columns[Genre]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">GenreName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Outputs[Lookup Match Output].Columns[GenreId]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Outputs[Lookup Match Output].Columns[GenreId]"
                      name="GenreId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">GenreId</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Pass 2 - import films\List of films in Excel"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="List of films in Excel"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Films$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Pass 2 - import films\List of films in Excel.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Workbook of films]"
                  connectionManagerRefId="Package.ConnectionManagers[Workbook of films]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].Columns[FilmID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].ExternalColumns[FilmID]"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].Columns[FilmID]"
                      name="FilmID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].Columns[Title]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].ExternalColumns[Title]"
                      length="255"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].Columns[Title]"
                      name="Title"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].Columns[Director]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].ExternalColumns[Director]"
                      length="255"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].Columns[Director]"
                      name="Director"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].Columns[Genre]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].ExternalColumns[Genre]"
                      length="255"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].Columns[Genre]"
                      name="Genre"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].ExternalColumns[FilmID]"
                      dataType="r8"
                      name="FilmID" />
                    <externalMetadataColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].ExternalColumns[Title]"
                      dataType="wstr"
                      length="255"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].ExternalColumns[Director]"
                      dataType="wstr"
                      length="255"
                      name="Director" />
                    <externalMetadataColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].ExternalColumns[Genre]"
                      dataType="wstr"
                      length="255"
                      name="Genre" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output].Columns[FilmID]"
                      dataType="r8"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output].Columns[FilmID]"
                      name="FilmID" />
                    <outputColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output].Columns[Title]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output].Columns[Director]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output].Columns[Director]"
                      name="Director" />
                    <outputColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output].Columns[Genre]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output].Columns[Genre]"
                      name="Genre" />
                    <outputColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Pass 2 - import films\Table of films in SQL Server"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Table of films in SQL Server"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FilmsForLookupExercise]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Pass 2 - import films\Table of films in SQL Server.Connections[OleDbConnection]"
                  connectionManagerID="{548C867D-C15A-45F2-BD64-686786072B0E}:invalid"
                  connectionManagerRefId="{548C867D-C15A-45F2-BD64-686786072B0E}:invalid"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Pass 2 - import films\Table of films in SQL Server.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Pass 2 - import films\Table of films in SQL Server.Inputs[OLE DB Destination Input].Columns[Director]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Director"
                      externalMetadataColumnId="Package\Pass 2 - import films\Table of films in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Director]"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].Columns[Director]" />
                    <inputColumn
                      refId="Package\Pass 2 - import films\Table of films in SQL Server.Inputs[OLE DB Destination Input].Columns[GenreId]"
                      cachedDataType="i4"
                      cachedName="GenreId"
                      externalMetadataColumnId="Package\Pass 2 - import films\Table of films in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[GenreId]"
                      lineageId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Outputs[Lookup Match Output].Columns[GenreId]" />
                    <inputColumn
                      refId="Package\Pass 2 - import films\Table of films in SQL Server.Inputs[OLE DB Destination Input].Columns[Title]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Title"
                      externalMetadataColumnId="Package\Pass 2 - import films\Table of films in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[FilmName]"
                      lineageId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output].Columns[Title]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Pass 2 - import films\Table of films in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[FilmName]"
                      dataType="wstr"
                      length="255"
                      name="FilmName" />
                    <externalMetadataColumn
                      refId="Package\Pass 2 - import films\Table of films in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Director]"
                      dataType="wstr"
                      length="255"
                      name="Director" />
                    <externalMetadataColumn
                      refId="Package\Pass 2 - import films\Table of films in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[GenreId]"
                      dataType="i4"
                      name="GenreId" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Pass 2 - import films\Table of films in SQL Server.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Pass 2 - import films\Table of films in SQL Server.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Pass 2 - import films\Table of films in SQL Server.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Pass 2 - import films\Table of films in SQL Server.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Pass 2 - import films\Table of films in SQL Server.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Pass 2 - import films\Table of films in SQL Server.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Pass 2 - import films.Paths[Excel Source Output]"
              endId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Inputs[Lookup Input]"
              name="Excel Source Output"
              startId="Package\Pass 2 - import films\List of films in Excel.Outputs[Excel Source Output]" />
            <path
              refId="Package\Pass 2 - import films.Paths[Lookup Match Output]"
              endId="Package\Pass 2 - import films\Table of films in SQL Server.Inputs[OLE DB Destination Input]"
              name="Lookup Match Output"
              startId="Package\Pass 2 - import films\Find corresponding genre id (will always be one).Outputs[Lookup Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{88D716CE-4095-4D34-B649-B1EDE614CFFB}"
      DTS:From="Package\Pass 1 - add new genres"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Pass 2 - import films" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{B1FD1BD4-5F6D-400A-AA85-DCB67137BC94}"
      DTS:From="Package\Delete any old films from FilmsForLookupExercise table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Pass 1 - add new genres" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{64E670E4-DD55-439F-8214-3967CE69E7AE}"
      DTS:From="Package\Pass 2 - import films"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Finally - show films with new genres" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="199.2,54.4"
          Id="Package\Delete any old films from FilmsForLookupExercise table"
          TopLeft="89.4603189838177,23.6549022925354" />
        <NodeLayout
          Size="249.6,41.6"
          Id="Package\Finally - show films with new genres"
          TopLeft="62.8571439275936,242.258826927" />
        <NodeLayout
          Size="194.4,41.6"
          Id="Package\Pass 1 - add new genres"
          TopLeft="88.5079375383807,105.495426316135" />
        <NodeLayout
          Size="175.2,41.6"
          Id="Package\Pass 2 - import films"
          TopLeft="93.9047630271135,170.886276906419" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="183.606350282747,147.095426316135">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.7908505902846"
              Start="0,0"
              End="0,16.2908505902846">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.2908505902846" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="187.384128261099,78.0549022925354">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.4405240235994"
              Start="0,0"
              End="0,19.9405240235994">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.9405240235994" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="184.580953477354,212.486276906419">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.7725500205809"
              Start="0,0"
              End="0,22.2725500205809">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.2725500205809" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Finally - show films with new genres">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="188,41.6"
          Id="Package\Finally - show films with new genres\Films table just created"
          TopLeft="145.6,44" />
        <NodeLayout
          Size="120,41.6"
          Id="Package\Finally - show films with new genres\Union All"
          TopLeft="182.4,202.4" />
        <NodeLayout
          Size="173.6,41.6"
          Id="Package\Finally - show films with new genres\Genre more than 22"
          TopLeft="156.8,121.6" />
        <EdgeLayout
          Id="Package\Finally - show films with new genres.Paths[OLE DB Source Output]"
          TopLeft="241.6,85.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Finally - show films with new genres.Paths[New]"
          TopLeft="243,163.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.2"
              Start="0,0"
              End="0,31.7">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.1026953125,7.85000000000001,38.205390625,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Finally - show films with new genres\Films table just created">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Pass 1 - add new genres">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="157.6,41.6"
          Id="Package\Pass 1 - add new genres\Try to find genre"
          TopLeft="36.5714291942363,87.4823541680834" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Pass 1 - add new genres\Sort"
          TopLeft="62.8571439275937,160.894119903538" />
        <NodeLayout
          Size="165.6,41.6"
          Id="Package\Pass 1 - add new genres\Add to genre table"
          TopLeft="33.1428577072766,239.811768069152" />
        <NodeLayout
          Size="132,41.6"
          Id="Package\Pass 1 - add new genres\List of films"
          TopLeft="43.4285721681556,17.7411767194015" />
        <EdgeLayout
          Id="Package\Pass 1 - add new genres.Paths[Lookup No Match Output]"
          TopLeft="113.514286560915,129.082354168083">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.8117657354547"
              Start="0,0"
              End="0,24.3117657354547">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.3117657354547" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,6.35119536772733,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Pass 1 - add new genres.Paths[Excel Source Output]"
          TopLeft="112.400000681196,59.3411767194015">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.1411774486819"
              Start="0,0"
              End="0,20.6411774486819">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.6411774486819" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Pass 1 - add new genres.Paths[Sort Output]"
          TopLeft="113.800000817435,202.494119903538">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.3176481656138"
              Start="0,0"
              End="0,29.8176481656138">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.8176481656138" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Pass 1 - add new genres\Try to find genre">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Genre]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Pass 1 - add new genres\Add to genre table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Pass 1 - add new genres\List of films">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Pass 2 - import films">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="172,41.6"
          Id="Package\Pass 2 - import films\List of films in Excel"
          TopLeft="111.2,28.8" />
        <NodeLayout
          Size="209.6,41.6"
          Id="Package\Pass 2 - import films\Table of films in SQL Server"
          TopLeft="109.6,224.8" />
        <NodeLayout
          Size="265.6,66.4"
          Id="Package\Pass 2 - import films\Find corresponding genre id (will always be one)"
          TopLeft="84,108" />
        <EdgeLayout
          Id="Package\Pass 2 - import films.Paths[Excel Source Output]"
          TopLeft="197.2,70.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.6,37.6"
              Start="0,0"
              End="19.6,30.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.8" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.8"
                    Point2="0,18.8"
                    Point3="4,18.8" />
                  <mssgle:LineSegment
                    End="15.6,18.8" />
                  <mssgle:CubicBezierSegment
                    Point1="15.6,18.8"
                    Point2="19.6,18.8"
                    Point3="19.6,22.8" />
                  <mssgle:LineSegment
                    End="19.6,30.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Pass 2 - import films.Paths[Lookup Match Output]"
          TopLeft="215.6,174.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.4"
              Start="0,0"
              End="0,42.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,15.6453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Pass 2 - import films\List of films in Excel">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Pass 2 - import films\Table of films in SQL Server">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Pass 2 - import films\Find corresponding genre id (will always be one)">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Genre]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>